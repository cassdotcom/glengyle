$dataTable = Data {

    ConvertFrom-StringData @'
    WOP_AutoScript_1=C:\\Users\\ac00418\\Documents\\glengyle\\data\\SSF\\WOP_AutoScript_1.ps1
    WOP_AutoScript_2=C:\\Users\\ac00418\\Documents\\glengyle\\data\\SSF\\WOP_AutoScript_2.ps1
    autoGeneratedDir_Cdrive=C:\\users\\ac00418\\Documents\\glengyle\\data\\SSF\\autogenerated\\
    autoGeneratedDir=\\\\scotia.sgngroup.net\\dfs\\shared\\Syn4.2.3\\TEST AREA\\ac00418\\OpsPlan\\scripts\\synergee\\autogenerated\\
    ssfAuthor=A. CASSIDY                                                                                                                                           
    ssfFileDate=2015-08-22                                                                                                                               
    ssfComment=                                                                                                                                   
    ssfRevision=1
'@
}


<#function Expand-SSFText {

    Param(
        [System.Object]
        $ssf,
        [Switch]
        $ssfFlag
    )

    
    if ( ! ( $ssfFlag ) ) 
    {
        [Scriptblock]$WOP_AutoScript_Text = Get-Command $dataTable.WOP_AutoScript_1 | select -ExpandProperty ScriptBlock
    }
    else
    { 
        [scriptblock]$WOP_AutoScript_Text = Get-Command $dataTable.WOP_AutoScript_2 | select -ExpandProperty ScriptBlock
    }


    Invoke-Command -ScriptBlock $WOP_AutoScript_Text

}#>

function Create-SSF {

    [CmdletBinding()]
    Param (
        [Parameter(Mandatory=$true,ValueFromPipeline=$true)]
        [ValidateNotNull()]
        [ValidateNotNullOrEmpty()]
        [System.String]
        $NetNum
    )
    
    Begin {

        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`tBegin Create-SSF function"
        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`t========================="

        # 
        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`tCreate object"
        $ssf = New-Object psobject
        $ssf | Add-Member -MemberType NoteProperty -Name Author -Value $dataTable.ssfAuthor
        $ssf | Add-Member -MemberType NoteProperty -Name FileDate -Value $dataTable.ssfFileDate
        $ssf | Add-Member -MemberType NoteProperty -Name Comment -Value $dataTable.ssfComment
        $ssf | Add-Member -MemberType NoteProperty -Name Revision -Value $dataTable.ssfRevision

        $ssf | Add-Member -MemberType NoteProperty -Name LogFile -Value ""

        $DaT = get-date -UFormat "%A, %d %B %Y at %T"                                                                                                                                           
        $ssf | Add-Member -MemberType NoteProperty -Name DateAndTime -Value $DaT
        
        $scriptTitle = $MyInvocation.MyCommand.Name                                                                                                                               
        $ssf | Add-Member -MemberType NoteProperty -Name NameOfScript -Value $scriptTitle          

        $ssf | Add-Member -MemberType NoteProperty -Name FileName -Value ""                                                                                                                                      
        $ssf | Add-Member -MemberType NoteProperty -Name FileID -Value "" 
        $ssf | Add-Member -MemberType NoteProperty -Name FutureYear -Value ""                                                                      
        $ssf | Add-Member -MemberType NoteProperty -Name Run -Value ""    
        $ssf | Add-Member -MemberType NoteProperty -Name OutputFile -Value ""

       

    } Process {

        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`tScript is saved in :"
        $SaveDir = $dataTable.autogeneratedDir_Cdrive + $NetNum
        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`t`t$($SaveDir)"

        if ( ! ( Test-Path $SaveDir ) ) { New-Item -Path $SaveDir -ItemType Directory | Out-Null }
            
        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`tBegin processing:`t$($NetNum)"

        $ssf.LogFile = ($NetNum + "_FY1_Analysis_Log")

        # Run 1
        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`tRun 1"
        $ssf.FileName = "FY1-R1-SSF.ssf"                                                                                                                                      
        $ssf.FileID = ("WOP15F1R1SSF" + $netNum )
        $ssf.FutureYear = "FY1"                                                                      
        $ssf.Run = "R1"           
        $outFile = $NetNum + "_FY1_R1"                                                                                                                                            
        $ssf.OutputFile = $outFile
        [Scriptblock]$WOP_AutoScript_Text = Get-Command $dataTable.WOP_AutoScript_1 | select -ExpandProperty ScriptBlock
        Invoke-Command -ScriptBlock $WOP_AutoScript_Text | Out-File ($SaveDir + "\FY1_R1_SSF.txt")
        #Expand-SSFText -ssf $ssf | Out-File ($SaveDir + "\FY1_R1_SSF.txt")



        # Run 2        
        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`tRun 2"
        $ssf.FileName = "FY1-R2-SSF.ssf"  
        $ssf.FutureYear = "FY1"                                                                                                                                    
        $ssf.FileID = ("WOP15F1R2SSF" + $netNum)                                                                       
        $ssf.Run = "R2"    
        
        $outFile = $NetNum + "_FY1_R2"                                                                                                                                            
        $ssf.OutputFile = $outFile
        [Scriptblock]$WOP_AutoScript_Text = Get-Command $dataTable.WOP_AutoScript_2 | select -ExpandProperty ScriptBlock
        Invoke-Command -ScriptBlock $WOP_AutoScript_Text | Out-File ($SaveDir + "\FY1_R2_SSF.txt")



        # Run 3        
        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`tRun 3"
        $ssf.FileName = "FY5-R1-SSF.ssf"    
        $ssf.FutureYear = "FY5"                                                                                                                                                 
        $ssf.FileID = ("WOP15F5R1SSF" + $netNum)
        $ssf.Run = "R1"    
        
        $outFile = $NetNum + "_FY5_R1"                                                                                                                                            
        $ssf.OutputFile = $outFile
        [Scriptblock]$WOP_AutoScript_Text = Get-Command $dataTable.WOP_AutoScript_1 | select -ExpandProperty ScriptBlock
        Invoke-Command -ScriptBlock $WOP_AutoScript_Text | Out-File ($SaveDir + "\FY5_R1_SSF.txt")



        # Run 4        
        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`tRun 4"
        $ssf.FileName = "FY5-R2-SSF.ssf"      
        $ssf.FutureYear = "FY5"                                                                                                                                               
        $ssf.FileID = ("WOP15F5R2SSF" + $netNum)
        $ssf.Run = "R2"    
        
        $outFile = $NetNum + "_FY5_R2"                                                                                                                                            
        $ssf.OutputFile = $outFile
        [Scriptblock]$WOP_AutoScript_Text = Get-Command $dataTable.WOP_AutoScript_1 | select -ExpandProperty ScriptBlock
        Invoke-Command -ScriptBlock $WOP_AutoScript_Text | Out-File ($SaveDir + "\FY5_R2_SSF.txt")



        # Run 5        
        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`tRun 5"
        $ssf.FileName = "FY5-R3-SSF.ssf"
        $ssf.FutureYear = "FY5"                                                                                                                                                 
        $ssf.FileID = ("WOP15F5R3SSF" + $netNum)
        $ssf.Run = "R3"    
        
        $outFile = $NetNum + "_FY5_R3"                                                                                                                                            
        $ssf.OutputFile = $outFile

        $ssf.LogFile = ($NetNum + "_FY5_Analysis_Log")
        [Scriptblock]$WOP_AutoScript_Text = Get-Command $dataTable.WOP_AutoScript_2 | select -ExpandProperty ScriptBlock
        Invoke-Command -ScriptBlock $WOP_AutoScript_Text | Out-File ($SaveDir + "\FY5_R3_SSF.txt")

        Write-Verbose "[$(Get-Date -Format "yyyy-MM-dd HH:mm:ss")]`tEnd processing`t$($NetNum)"

         
    } End {
<#
    .VERSION
        1.2
#> }   
}

